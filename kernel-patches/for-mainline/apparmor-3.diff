Index: linux-2.6-apparmor/security/apparmor/match.h
===================================================================
--- linux-2.6-apparmor.orig/security/apparmor/match.h
+++ linux-2.6-apparmor/security/apparmor/match.h
@@ -61,8 +61,6 @@ struct table_header {
 
 struct aa_dfa {
 	struct table_header *tables[YYTD_ID_NXT];
-
-	struct table_set_header th;
 };
 
 #define ntohb(X) (X)
Index: linux-2.6-apparmor/security/apparmor/match.c
===================================================================
--- linux-2.6-apparmor.orig/security/apparmor/match.c
+++ linux-2.6-apparmor/security/apparmor/match.c
@@ -58,26 +58,22 @@ out:
 
 int unpack_dfa(struct aa_dfa *dfa, void *blob, size_t size)
 {
-	int i;
+	int hsize, i;
 	int error = -ENOMEM;
 
 	/* get dfa table set header */
 	if (size < sizeof(struct table_set_header))
 		goto fail;
 
-	dfa->th.th_magic = ntohl(*(u32 *) (blob + 0));
-	dfa->th.th_hsize = ntohl(*(u32 *) (blob + 4));
-	dfa->th.th_ssize = ntohl(*(u32 *) (blob + 8));
-	dfa->th.th_flags = ntohs(*(u16 *) (blob + 12));
-
-	if (dfa->th.th_magic != YYTH_MAGIC)
+	if (ntohl(*(u32 *)blob) != YYTH_MAGIC)
 		goto fail;
 
-	if (size < dfa->th.th_hsize)
+	hsize = ntohl(*(u32 *)(blob + 4));
+	if (size < hsize)
 		goto fail;
 
-	blob += dfa->th.th_hsize;
-	size -= dfa->th.th_hsize;
+	blob += hsize;
+	size -= hsize;
 
 	while (size > 0) {
 		struct table_header *table;
Index: linux-2.6-apparmor/security/apparmor/apparmor.h
===================================================================
--- linux-2.6-apparmor.orig/security/apparmor/apparmor.h
+++ linux-2.6-apparmor/security/apparmor/apparmor.h
@@ -17,8 +17,6 @@
 #include <linux/binfmts.h>	/* defn of linux_binprm */
 #include <linux/rcupdate.h>
 
-#include "match.h"
-
 /*
  * We use MAY_READ, MAY_WRITE, MAY_EXEC, and the following flags for
  * profile permissions (we don't use MAY_APPEND):
