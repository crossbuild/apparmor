Index: linux-2.6.19.1/security/apparmor/main.c
===================================================================
--- linux-2.6.19.1.orig/security/apparmor/main.c
+++ linux-2.6.19.1/security/apparmor/main.c
@@ -668,6 +668,7 @@ char *aa_get_name(struct dentry *dentry,
 {
 	char *buffer, *name;
 	int order = 0;
+	unsigned int pconds;
 
 	*addr = NULL;
 	buffer = (char *)aa_get_path(GFP_KERNEL);
@@ -677,7 +678,8 @@ char *aa_get_name(struct dentry *dentry,
 		goto out;
 	}
 
-	name = d_path(dentry, mnt, buffer, PAGE_SIZE << order);
+	name = d_path_flags(dentry, mnt, buffer, PAGE_SIZE << order,
+			    DPATH_NSROOT, &pconds);
 	/* check for (deleted) that d_path appends to pathnames if the dentry
 	 * has been removed from the cache.
 	 * The size > deleted_size and strcmp checks are redundant safe guards.
@@ -690,16 +692,6 @@ char *aa_get_name(struct dentry *dentry,
 		order++;
 		buffer = kmalloc(PAGE_SIZE << order, GFP_KERNEL);
 		goto retry;
-	} else {
-		const char deleted_str[] = " (deleted)";
-		const size_t deleted_size = sizeof(deleted_str) - 1;
-		size_t size;
-		size = strlen(name);
-		if (!IS_ROOT(dentry) && d_unhashed(dentry) &&
-		    size > deleted_size &&
-		    strcmp(name + size - deleted_size, deleted_str) == 0)
-			name[size - deleted_size] = '\0';
-		AA_DEBUG("%s: full_path=%s\n", __FUNCTION__, name);
 	}
 
 out:
