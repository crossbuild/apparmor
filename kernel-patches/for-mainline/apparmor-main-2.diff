From: Andreas Gruenbacher <agruen@suse.de>
Subject: Get rid of aa_taskattr_access

---
 security/apparmor/main.c |   31 +------------------------------
 1 file changed, 1 insertion(+), 30 deletions(-)

--- a/security/apparmor/main.c
+++ b/security/apparmor/main.c
@@ -38,27 +38,6 @@ static const char *capability_names[] = 
  */
 struct aa_profile *null_complain_profile;
 
-/**
- * aa_taskattr_access
- * @name: name of the file to check
- *
- * Check if name matches /proc/self/attr/current, with self resolved
- * to the current pid. This file is the usermode interface for
- * changing one's hat.
- */
-static inline int aa_taskattr_access(const char *name)
-{
-	unsigned long pid;
-	char *end;
-
-	if (strncmp(name, "/proc/", 6) != 0)
-		return 0;
-	pid = simple_strtoul(name + 6, &end, 10);
-	if (pid != current->pid)
-		return 0;
-	return strcmp(end, "/attr/current") == 0;
-}
-
 static inline void aa_permerror2result(int perm_result, struct aa_audit *sa)
 {
 	if (perm_result == 0) {	/* success */
@@ -82,15 +61,7 @@ static inline void aa_permerror2result(i
 static int aa_file_denied(struct aa_profile *profile, const char *name,
 			  int mask)
 {
-	int perms;
-
-	/* Always allow write access to /proc/self/attr/current. */
-	if (mask == MAY_WRITE && aa_taskattr_access(name))
-		return 0;
-
-	perms = aa_match(profile->file_rules, name);
-
-	return (mask & ~perms);
+	return (mask & ~aa_match(profile->file_rules, name));
 }
 
 /**
