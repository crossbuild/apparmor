---
 security/apparmor/main.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

--- a/security/apparmor/main.c
+++ b/security/apparmor/main.c
@@ -1083,8 +1083,8 @@ void aa_release(struct task_struct *task
 	 * sufficient to prevent the replacement race so we do not lock
 	 * the task.
 	 *
-	 * lock_dep reports a false 'possible irq lock inversion dependency'
-	 * between the profile lock and the task_lock.
+	 * Use lock subtyping to avoid lockdep reporting a false irq
+	 * possible inversion between the task_lock and profile_lock
 	 *
 	 * We also avoid taking the task_lock here because lock_dep
 	 * would report another false {softirq-on-W} potential irq_lock
@@ -1097,7 +1097,10 @@ void aa_release(struct task_struct *task
 repeat:
 	profile = aa_get_profile(task);
 	if (profile) {
-		lock_profile(profile);
+		struct aa_profile *lock_profile = profile->parent;
+		spin_lock_irqsave_nested(&lock_profile->lock,
+					 lock_profile->int_flags,
+					 aa_lock_task_release);
 		cxt = aa_task_context(task);
 		if (unlikely(!cxt || cxt->profile != profile)) {
 			unlock_profile(profile);
@@ -1105,7 +1108,7 @@ repeat:
 			goto repeat;
 		}
 		aa_change_task_context(task, NULL, NULL, 0);
-		unlock_profile(profile);
+		unlock_profile(lock_profile);
 		aa_put_profile(profile);
 	}
 }
