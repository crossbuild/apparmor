Use the MS_NOUSER flag which indicates that a filesystem is not
mountable to decide which filesystems to mediate.

This replaces apparmor-novalidfstype.diff, with the following
differences:

* apparmor_inode_rename() only calls VALID_FSTYPE for the old
  inode: rename cannot cross filesystems.

* apparmor_file_alloc_security() only attaches the profile
  to files on VALID_FSTYPE filesystems.

Index: b/security/apparmor/apparmor.h
===================================================================
--- a/security/apparmor/apparmor.h
+++ b/security/apparmor/apparmor.h
@@ -25,16 +25,8 @@ extern int apparmor_debug;
 extern int apparmor_audit;
 extern int apparmor_logsyscall;
 
-/* PIPEFS_MAGIC */
-#include <linux/pipe_fs_i.h>
-/* from net/socket.c */
-#define SOCKFS_MAGIC 0x534F434B
-/* from inotify.c  */
-#define INOTIFYFS_MAGIC 0xBAD1DEA
-
-#define VALID_FSTYPE(inode) ((inode)->i_sb->s_magic != PIPEFS_MAGIC && \
-			     (inode)->i_sb->s_magic != SOCKFS_MAGIC && \
-			     (inode)->i_sb->s_magic != INOTIFYFS_MAGIC)
+#define VALID_FSTYPE(inode) \
+	(!((inode)->i_sb->s_flags & MS_NOUSER))
 
 #define PROFILE_COMPLAIN(_profile) \
 	(apparmor_complain == 1 || ((_profile) && (_profile)->flags.complain))
@@ -151,21 +143,6 @@ struct aaprofile {
 	struct kref count;
 };
 
-enum aafile_type {
-	aa_file_default,
-	aa_file_shmem
-};
-
-/**
- * aafile - file pointer confinement data
- *
- * Data structure assigned to each open file (by apparmor_file_alloc_security)
- */
-struct aafile {
-	enum aafile_type type;
-	struct aaprofile *profile;
-};
-
 /**
  * struct subdomain - primary label for confined tasks
  * @active: the current active profile
Index: b/security/apparmor/lsm.c
===================================================================
--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -254,7 +254,7 @@ static int apparmor_inode_mkdir(struct i
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!mnt)
+	if (!mnt || !VALID_FSTYPE(inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -274,7 +274,7 @@ static int apparmor_inode_rmdir(struct i
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!mnt)
+	if (!mnt || !VALID_FSTYPE(inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -294,7 +294,7 @@ static int apparmor_inode_create(struct 
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!mnt)
+	if (!mnt || !VALID_FSTYPE(inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -316,7 +316,7 @@ static int apparmor_inode_link(struct de
 	int error = 0;
 	struct aaprofile *active;
 
-	if (!old_mnt || !new_mnt)
+	if (!old_mnt || !new_mnt || !VALID_FSTYPE(inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -338,7 +338,7 @@ static int apparmor_inode_unlink(struct 
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!mnt)
+	if (!mnt || !VALID_FSTYPE(dir))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -358,7 +358,7 @@ static int apparmor_inode_mknod(struct i
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!mnt)
+	if (!mnt || !VALID_FSTYPE(inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -382,7 +382,7 @@ static int apparmor_inode_rename(struct 
 	struct aaprofile *active;
 	int error = 0;
 
-	if (!old_mnt && !new_mnt)
+	if ((!old_mnt && !new_mnt) || !VALID_FSTYPE(old_inode))
 		goto out;
 
 	active = get_active_aaprofile();
@@ -539,18 +539,19 @@ out:
 static int apparmor_file_permission(struct file *file, int mask)
 {
 	struct aaprofile *active;
-	struct aafile *aaf;
+	struct aaprofile *file_profile = (struct aaprofile*)file->f_security;
 	int error = 0;
 
-	aaf = (struct aafile *)file->f_security;
 	/* bail out early if this isn't a mediated file */
-	if (!aaf || !VALID_FSTYPE(file->f_dentry->d_inode))
+	if (!file_profile || !VALID_FSTYPE(file->f_dentry->d_inode))
 		goto out;
 
 	active = get_active_aaprofile();
-	if (active && aaf->profile != active)
+	if (active && file_profile != active) {
+		/* FIXME: get rid of revalidation. */
 		error = aa_perm(active, file->f_dentry, file->f_vfsmnt,
 				mask & (MAY_EXEC | MAY_WRITE | MAY_READ));
+	}
 	put_aaprofile(active);
 
 out:
@@ -560,34 +561,25 @@ out:
 static int apparmor_file_alloc_security(struct file *file)
 {
 	struct aaprofile *active;
-	int error = 0;
+
+	if (!VALID_FSTYPE(file->f_dentry->d_inode))
+		return 0;
 
 	active = get_active_aaprofile();
 	if (active) {
-		struct aafile *aaf;
-		aaf = kmalloc(sizeof(struct aafile), GFP_KERNEL);
-
-		if (aaf) {
-			aaf->type = aa_file_default;
-			aaf->profile = get_aaprofile(active);
-		} else {
-			error = -ENOMEM;
-		}
-		file->f_security = aaf;
+		/* FIXME: get rid of revalidation. */
+		file->f_security = active;
 	}
-	put_aaprofile(active);
 
-	return error;
+	return 0;
 }
 
 static void apparmor_file_free_security(struct file *file)
 {
-	struct aafile *aaf = (struct aafile *)file->f_security;
+	struct aaprofile *file_profile = (struct aaprofile*)file->f_security;
 
-	if (aaf) {
-		put_aaprofile(aaf->profile);
-		kfree(aaf);
-	}
+	/* FIXME: get rid of revalidation. */
+	put_aaprofile(file_profile);
 }
 
 static inline int aa_mmap(struct file *file, unsigned long prot,
@@ -595,12 +587,9 @@ static inline int aa_mmap(struct file *f
 {
 	int error = 0, mask = 0;
 	struct aaprofile *active;
-	struct aafile *aaf;
 
 	active = get_active_aaprofile();
-	if (!active || !file ||
-	    !(aaf = (struct aafile *)file->f_security) ||
-	    aaf->type == aa_file_shmem)
+	if (!active || !file || !VALID_FSTYPE(file->f_dentry->d_inode))
 		goto out;
 
 	if (prot & PROT_READ)
@@ -659,17 +648,6 @@ static void apparmor_task_reparent_to_in
 	return;
 }
 
-static int apparmor_shm_shmat(struct shmid_kernel *shp, char __user *shmaddr,
-			      int shmflg)
-{
-	struct aafile *aaf = (struct aafile *)shp->shm_file->f_security;
-
-	if (aaf)
-		aaf->type = aa_file_shmem;
-
-	return 0;
-}
-
 static int apparmor_getprocattr(struct task_struct *p, char *name, void *value,
 				size_t size)
 {
@@ -852,8 +830,6 @@ struct security_operations apparmor_ops 
 	.task_post_setuid =		apparmor_task_post_setuid,
 	.task_reparent_to_init =	apparmor_task_reparent_to_init,
 
-	.shm_shmat =			apparmor_shm_shmat,
-
 	.getprocattr =			apparmor_getprocattr,
 	.setprocattr =			apparmor_setprocattr,
 };
