Per the discussion in the email thread beginning with

  Subject: [pdx] Block the CLONE_NEWNS flag in clone(2)
  Message-Id: <200702241013.09434.agruen@suse.de>

we decided to drop the outright rejection on CLONE_NEWNS since the kernel
currently requires CAP_SYS_ADMIN.

As an alternative to this patch, we could convert the error = -EPERM
line to a capable(CAP_SYS_ADMIN) check, to guarantee that CLONE_NEWNS
always requires CAP_SYS_ADMIN under apparmor, even if the kernel changes
to not require it.
---
 security/apparmor/lsm.c |   17 -----------------
 1 file changed, 17 deletions(-)

--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -467,22 +467,6 @@ out:
 	return error;
 }
 
-static int apparmor_task_create(unsigned long clone_flags)
-{
-	struct aa_profile *profile;
-	int error = 0;
-
-	profile = aa_get_profile(current);
-	if (profile) {
-		/* Don't allow to create new namespaces. */
-		if (clone_flags & CLONE_NEWNS)
-			error = -EPERM;
-	}
-	aa_put_profile(profile);
-
-	return error;
-}
-
 static int apparmor_file_alloc_security(struct file *file)
 {
 	struct aa_profile *profile;
@@ -678,7 +662,6 @@ struct security_operations apparmor_ops 
 	.file_mmap =			apparmor_file_mmap,
 	.file_mprotect =		apparmor_file_mprotect,
 
-	.task_create =			apparmor_task_create,
 	.task_alloc_security =		apparmor_task_alloc_security,
 	.task_free_security =		apparmor_task_free_security,
 	.task_post_setuid =		cap_task_post_setuid,
