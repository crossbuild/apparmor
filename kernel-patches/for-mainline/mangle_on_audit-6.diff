 * Rip out LOG_HINT() and replace it with direct calls to aa_audit_message().

 * Annotate aa_audit_message() as a printf-style function so that we'll get
   argument type checking.

---
 security/apparmor/apparmor.h |   10 ++--------
 security/apparmor/lsm.c      |    9 ++++++---
 security/apparmor/main.c     |   29 ++++++++++++++++++++---------
 3 files changed, 28 insertions(+), 20 deletions(-)

--- a/security/apparmor/apparmor.h
+++ b/security/apparmor/apparmor.h
@@ -180,13 +180,6 @@ struct aa_audit {
 #define AA_AUDITFLAG_LOGERR	     2 /* log operations that failed due to
 					   non permission errors  */
 
-#define LOG_HINT(p, gfp, hint, fmt, args...) \
-	aa_audit_message((p), (gfp), \
-			"LOGPROF-HINT " hint " " fmt \
-			" (%d profile %s active %s)", ##args, \
-			current->pid, \
-			(p)->parent->name, (p)->name)
-
 /* Flags for the permission check functions */
 #define AA_CHECK_LEAF	1  /* this is the leaf lookup component */
 #define AA_CHECK_FD	2  /* coming from a file descriptor */
@@ -198,7 +191,8 @@ extern int alloc_null_complain_profile(v
 extern void free_null_complain_profile(void);
 extern int attach_nullprofile(struct aa_profile *profile);
 extern int aa_audit_message(struct aa_profile *profile, gfp_t gfp,
-			    const char *, ...);
+			    const char *, ...)
+	__attribute__ ((format (printf, 3, 4)));
 extern int aa_audit_syscallreject(struct aa_profile *profile, gfp_t gfp,
 				  const char *);
 extern int aa_audit(struct aa_profile *profile, struct aa_audit *);
--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -133,9 +133,12 @@ static int apparmor_ptrace(struct task_s
 	} else {
 		error = aa_may_ptrace(cxt, child_profile);
 		if (cxt && PROFILE_COMPLAIN(cxt->profile)) {
-			LOG_HINT(cxt->profile, GFP_ATOMIC, "ptrace",
-				 "pid=%d child=%d\n",
-				 current->pid, child->pid);
+			aa_audit_message(cxt->profile, GFP_ATOMIC,
+					 "LOGPROF-HINT ptrace pid=%d child=%d "
+					 "(%d profile %s active %s)",
+					 current->pid, child->pid, current->pid,
+					 cxt->profile->parent->name,
+					 cxt->profile->name);
 		}
 	}
 	rcu_read_unlock();
--- a/security/apparmor/main.c
+++ b/security/apparmor/main.c
@@ -869,8 +869,11 @@ repeat:
 
 		if (APPARMOR_COMPLAIN(child_cxt) &&
 		    profile == null_complain_profile)
-			LOG_HINT(profile, GFP_KERNEL, "fork",
-				 "child=%d", child->pid);
+			aa_audit_message(profile, GFP_KERNEL,
+					 "LOGPROF-HINT fork child=%d "
+					 "(%d profile %s active %s)",
+					 child->pid, current->pid,
+					 profile->parent->name, profile->name);
 		aa_put_profile(profile);
 	} else
 		aa_free_task_context(child_cxt);
@@ -892,8 +895,11 @@ aa_register_find(struct aa_profile *prof
 	} else if (mandatory && profile) {
 		name = mangle(name, buffer);
 		if (complain) {
-			LOG_HINT(profile, GFP_KERNEL, "missing_mandatory_profile",
-				 "image '%s'", name);
+			aa_audit_message(profile, GFP_KERNEL, "LOGPROF-HINT "
+					 "missing_mandatory_profile image '%s' "
+					 "(%d profile %s active %s)",
+					 name, current->pid,
+					 profile->parent->name, profile->name);
 			profile = aa_dup_profile(null_complain_profile);
 		} else {
 			aa_audit_message(profile, GFP_KERNEL, "REJECTING "
@@ -1056,9 +1062,11 @@ repeat:
 	}
 
 	if (complain && new_profile == null_complain_profile)
-		LOG_HINT(new_profile, GFP_ATOMIC, "changing_profile",
-			 "");
-
+		aa_audit_message(new_profile, GFP_ATOMIC,
+				 "LOGPROF-HINT changing_profile "
+				 "(%d profile %s active %s)",
+				 current->pid,
+				 new_profile->parent->name, new_profile->name);
 cleanup:
 	aa_put_name_buffer(buffer);
 	if (IS_ERR(new_profile))
@@ -1144,8 +1152,11 @@ static int do_change_hat(const char *hat
 		struct aa_profile *profile = cxt->profile;
 
 		if (APPARMOR_COMPLAIN(cxt)) {
-			LOG_HINT(profile, GFP_ATOMIC, "unknown_hat",
-				 "%s", hat_name);
+			aa_audit_message(profile, GFP_ATOMIC,
+					 "LOGPROF-HINT unknown_hat %s "
+					 "(%d profile %s active %s)",
+					 hat_name, current->pid,
+					 profile->parent->name, profile->name);
 		} else {
 			AA_DEBUG("%s: Unknown hatname '%s'. "
 				"Changing to NULL profile "
