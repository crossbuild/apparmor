Index: linux-2.6-apparmor/security/apparmor/inline.h
===================================================================
--- linux-2.6-apparmor.orig/security/apparmor/inline.h
+++ linux-2.6-apparmor/security/apparmor/inline.h
@@ -143,6 +143,8 @@ static inline void unlock_profile(struct
 
 /**
  * lock_both_profiles  -  lock two profiles in a deadlock-free way
+ * @profile1:	profile to lock (may be NULL)
+ * @profile2:	profile to lock (may be NULL)
  *
  * The order in which profiles are passed into lock_both_profiles() /
  * unlock_both_profiles() does not matter.
@@ -172,11 +174,13 @@ static inline void lock_both_profiles(st
 		if (profile2)
 			spin_lock_irqsave(&profile2->lock, profile2->int_flags);
 	} else if (profile1 > profile2) {
+		/* profile1 cannot be NULL here. */
 		spin_lock_irqsave(&profile1->lock, profile1->int_flags);
 		if (profile2)
 			spin_lock(&profile2->lock);
 
 	} else {
+		/* profile2 cannot be NULL here. */
 		spin_lock_irqsave(&profile2->lock, profile2->int_flags);
 		spin_lock(&profile1->lock);
 	}
@@ -184,6 +188,8 @@ static inline void lock_both_profiles(st
 
 /**
  * unlock_both_profiles  -  unlock two profiles in a deadlock-free way
+ * @profile1:	profile to unlock (may be NULL)
+ * @profile2:	profile to unlock (may be NULL)
  *
  * The order in which profiles are passed into lock_both_profiles() /
  * unlock_both_profiles() does not matter.
@@ -205,10 +211,12 @@ static inline void unlock_both_profiles(
 			spin_unlock_irqrestore(&profile2->lock,
 					       profile2->int_flags);
 	} else if (profile1 > profile2) {
+		/* profile1 cannot be NULL here. */
 		if (profile2)
 			spin_unlock(&profile2->lock);
 		spin_unlock_irqrestore(&profile1->lock, profile1->int_flags);
 	} else {
+		/* profile2 cannot be NULL here. */
 		spin_unlock(&profile1->lock);
 		spin_unlock_irqrestore(&profile2->lock, profile2->int_flags);
 	}
