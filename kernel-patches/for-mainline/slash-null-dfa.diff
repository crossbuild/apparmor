convert the null transition from using the 0 character to "//" until
the parser gets updated so that it can add a null character transition.

---
 security/apparmor/match.c |   24 +-----------------------
 1 file changed, 1 insertion(+), 23 deletions(-)

--- a/security/apparmor/match.c
+++ b/security/apparmor/match.c
@@ -262,29 +262,7 @@ unsigned int aa_dfa_next_state(struct aa
  */
 unsigned int aa_dfa_null_transition(struct aa_dfa *dfa, unsigned int start)
 {
-	u16 *def = DEFAULT_TABLE(dfa);
-	u32 *base = BASE_TABLE(dfa);
-	u16 *next = NEXT_TABLE(dfa);
-	u16 *check = CHECK_TABLE(dfa);
-	unsigned int state = start, pos;
-
-	/* current state is <state>, matching character *str */
-	if (dfa->tables[YYTD_ID_EC - 1]) {
-		u8 *equiv = EQUIV_TABLE(dfa);
-		pos = base[state] + equiv[0];
-		if (check[pos] == state)
-			state = next[pos];
-		else
-			state = def[state];
-	} else {
-		pos = base[state] + 0;
-		if (check[pos] == state)
-			state = next[pos];
-		else
-			state = def[state];
-	}
-
-	return state;
+	return aa_dfa_next_state(dfa, start, "//");
 }
 
 /**
