AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libaalogparse, 0.7)

AM_PROG_LEX
AC_PROG_YACC

AC_PATH_PROG([SWIG], [swig])

AC_MSG_CHECKING(Checking for Python)
AC_ARG_WITH(python,
[  --with-python           enable the python wrapper  [[default=no]]],
[AC_MSG_RESULT($withval)], [AC_MSG_RESULT(no)])
if test "$with_python" = "yes"; then
  sinclude(m4/ac_python_devel.m4)
  AC_PYTHON_DEVEL
  AM_PATH_PYTHON
fi

AC_MSG_CHECKING(Checking for perl)
AC_ARG_WITH(perl,
[ --with-perl           enable the perl wrapper [[default=no]]],
[AC_MSG_RESULT($withval)], [AC_MSG_RESULT(no)])
if test "$with_perl" = "yes"; then
   AC_PATH_PROG(PERL, perl, no)    
   if test x$PERL = xno; then
      enable_perl=no
   else
      perl_includedir="`$PERL -e 'use Config; print $Config{archlib}'`/CORE"
      AC_CHECK_FILE($perl_includedir/perl.h, enable_perl=yes, enable_perl=no)
   fi
fi


AC_MSG_CHECKING(Checking for ruby)
AC_ARG_WITH(ruby,
[ --with-ruby           enable the ruby wrapper [[default=no]]],
[AC_MSG_RESULT($withval)], [AC_MSG_RESULT(no)])
if test "$with_ruby" = "yes"; then
   AC_PATH_PROG([RUBY], [ruby])
fi


AM_CONDITIONAL(HAVE_PYTHON, test x$with_python = xyes)
AM_CONDITIONAL(HAVE_PERL, test x$with_perl = xyes) 
AM_CONDITIONAL(HAVE_RUBY, test x$with_ruby = xyes)
AM_PROG_CC_C_O

AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h stdint.h)

AC_C_CONST
AM_PROG_LIBTOOL

AC_OUTPUT(
Makefile
src/Makefile
swig/Makefile
swig/perl/Makefile
swig/python/Makefile
swig/ruby/Makefile
testsuite/Makefile
testsuite/config/Makefile
testsuite/libaalogparse.test/Makefile
testsuite/lib/Makefile
)
