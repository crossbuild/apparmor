/* ------------------------------------------------------------------
*
*    Copyright (C) 2002-2006 Novell/SUSE
*
*    This program is free software; you can redistribute it and/or
*    modify it under the terms of version 2 of the GNU General Public
*    License published by the Free Software Foundation.
*
  ------------------------------------------------------------------*/
{
import "Wizard";
import "Popup";
import "Sequencer";
include "subdomain/apparmor_packages.ycp";
include "subdomain/profile_dialogs.ycp";
textdomain  "yast2-apparmor";

// Globalz

define boolean CreateNewProfile() {
 string selectfilename = "";
 while ( true ) {
   selectfilename = UI::AskForExistingFile( "/", "",  _("Select File To Generate A Profile for") );
   // Check for cancel in the file choose dialog
   if ( selectfilename == nil ) {
    return false;
   }
   Settings["CURRENT_PROFILE"] =  selectfilename;
   boolean profile = (boolean) SCR::Read (.subdomain_profiles.new, selectfilename);
   if ( profile == false && Popup::YesNoHeadline( _("Profile for ") + selectfilename + _(" already exists."), _("Would you like to open this profile in editing mode?") ) ) {
       return true;
   }
   Settings["NEW_PROFILE"] =  selectfilename;
   return true;
  }
}



//
// Setup and run the Wizard
//
define any MainSequence() ``{

   map profiles = nil;
   map aliases = $[
        "showprofile"   : ``(DisplayProfileForm(Settings["CURRENT_PROFILE"]:"", false))
   ];

   map sequence = $[
        "ws_start" : "showprofile",
        "showprofile" : $[
               `abort : `abort,
               `next : `finish,
               `finish : `finish,
        ],
    ];

    boolean created_new_profile = CreateNewProfile();
    if ( created_new_profile == false ) {
      remove( Settings, "NEW_PROFILE");
      remove( Settings, "CURRENT_PROFILE");
      return (any) `abort;
    }
    map new_profile = (map) SCR::Read (.subdomain_profiles, Settings["CURRENT_PROFILE"]:"" );
    Settings["PROFILE_MAP"] = new_profile;
    Wizard::CreateDialog();
    Wizard::SetTitleIcon("apparmor/add_profile");
    any ret = Sequencer::Run(aliases, sequence);
    Wizard::CloseDialog();
    if ( ret == `abort ) {
      string profile_name = Settings["NEW_PROFILE"]:"";
      any result = SCR::Write(.subdomain_profiles.delete, profile_name);
    }
    Settings = remove( Settings, "NEW_PROFILE");
    Settings = remove( Settings, "CURRENT_PROFILE");
    return ret;
}



//
// YEAH BABY RUN BABY RUN
//
any ret = nil;
if (!installAppArmorPackages()) {
  return ret;
}
ret = MainSequence();
return ret;
}

